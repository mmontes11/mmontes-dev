affinity: {}

annotations: {}

extraArgs:
  - --collect.collection
  - --collect.database
  - --collect.indexusage
  - --collect.topmetrics
  - --collect.connpoolstats

fullnameOverride: "prometheus-mongodb-exporter"

image:
  repository: mmontes11/mongodb-prometheus-exporter
  tag: v0.12.0
  pullPolicy: Always
imagePullSecrets: []

livenessProbe:
  httpGet:
    path: /
    port: metrics
  initialDelaySeconds: 10

# [mongodb[+srv]://][user:pass@]host1[:port1][,host2[:port2],...][/database][?options]
mongodb:
  uri: "mongodb://mongo.iot:27017/IoT"

# Name of an externally managed secret (in the same namespace) containing the connection uri as key `mongodb-uri`.
# If this is provided, the value mongodb.uri is ignored.
existingSecret:
  name: ""

nameOverride: ""

nodeSelector: {}

podAnnotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/port: "metrics"

port: "9113"

priorityClassName: ""

readinessProbe:
  httpGet:
    path: /
    port: metrics
  initialDelaySeconds: 10

replicas: 1

resources:
  requests:
    memory: 128Mi
    cpu: 125m
  limits:
    memory: 256Mi
    cpu: 250m

# Extra environment variables that will be passed into the exporter pod
env: {}

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["all"]
  readOnlyRootFilesystem: true
  runAsGroup: 10000
  runAsNonRoot: true
  runAsUser: 10000

service:
  annotations: {}
  port: 9113
  type: ClusterIP

serviceAccount:
  create: true
  # If create is true and name is not set, then a name is generated using the
  # fullname template.
  name:

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  namespace:
  additionalLabels: {}

tolerations: []
